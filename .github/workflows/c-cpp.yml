name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  cpplint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
    - run: pip install cpplint
    - run: cpplint --repository=. --verbose=2 --recursive .
  
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Install ARM compilers
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf libeigen3-dev binfmt-support qemu-user-binfmt
        export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:/usr/arm-linux-gnueabihf/lib:$LD_LIBRARY_PATH
        sudo ln -s /usr/arm-linux-gnueabihf/lib/ld-linux-armhf.so.3 /usr/lib/ld-linux-armhf.so.3
    - name: Build and install libsockcanpp
      run: |
        cd third_party/libsockcanpp
        cmake --toolchain ../../tools/armhf-toolchain.cmake -DBUILD_SHARED_LIBS=ON -Bbuild -DGTEST_HAS_PTHREAD=0
        sudo cmake --build build --parallel --target install
        cd -
    - name: config
      run: >-
        cmake
        -Bbuild        
    - name: build
      run: cmake --build build --parallel
    - name: test
      run: cd build && ctest
    - name: install
      run: sudo make install

  build_ros2:
    runs-on: ubuntu-22.04
    container:
      image: amd64/ros:humble
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install build tools
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libeigen3-dev
      - name: Build and install libsockcanpp
        run: |
          cd third_party/libsockcanpp
          cmake --toolchain ../../tools/x86_64-toolchain.cmake -DBUILD_SHARED_LIBS=ON -Bbuild
          sudo cmake --build build --parallel --target install
          cd -
      - name: Build, test, and install huron
        run: |
          export LD_LIBRARY_PATH=/usr/local/lib:/usr/lib:$LD_LIBRARY_PATH
          cmake -DBUILD_TYPE=x86_64 -Bbuild
          cmake --build build --parallel
          cd build
          ctest
          sudo make install
          cd -
      - name: build and test ROS 2
        run: |
          cd ros2/
          . /opt/ros/humble/setup.sh
          colcon build
